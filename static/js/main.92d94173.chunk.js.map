{"version":3,"sources":["components/Button.tsx","components/Text.tsx","components/View.tsx","components/List.tsx","components/App.tsx","services/Utils.ts","reportWebVitals.ts","index.tsx"],"names":["Button","props","style","border","outline","cursor","width","fontSize","padding","borderRadius","margin","className","onClick","autoFocus","children","Text","type","value","textAlign","marginTop","onChange","required","placeholder","maxLength","maxLenght","View","display","height","flexDirection","justifyContent","List","paddingLeft","counterReset","listStylePosition","userSelect","list","slice","limit","map","item","i","text","App","useState","player","setplayer","steps","setSteps","currentStep","setcurrentStep","isGameOver","setisGameOver","isHallOfFame","setisHallOfFame","rankingList","setrankingList","useEffect","array","arr","push","MinMax","handleTileClick","e","target","classList","contains","length","src","alt","preventDefault","sort","n1","n2","goToHallOfFame","step","maxNumber","squaresArr","color","Math","random","toString","padStart","board","randomNumber","floor","background","handleTiles","title","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92d94173.chunk.js","sourcesContent":["import React,{ReactNode,SyntheticEvent} from 'react'\n\nfunction Button(props: {\n\tonClick: (event: SyntheticEvent<HTMLButtonElement>) => void\n\tchildren: ReactNode\n\tclassName?: string\n\tautoFocus?: boolean\n}) {\n\tconst btnStyle = {\n\t\tborder: '0',\n\t\toutline: '0',\n\t\tcursor: 'pointer',\n\t\twidth: '100%',\n\t\tfontSize: '2rem',\n\t\tpadding: '0.5rem',\n\t\tborderRadius: '0.5rem',\n\t\tmargin:'1rem 0',\n\t}\n\treturn (\n\t\t<button\n\t\t\tstyle={btnStyle}\n\t\t\tclassName={`btn ${props.className?props.className:''}`}\n\t\t\tonClick={props.onClick}\n\t\t\tautoFocus={props.autoFocus}\n\t\t\t>\n\t\t\t{props.children}\n\t\t</button>\n\t)\n}\nexport default Button","import React,{ ChangeEvent} from 'react'\n\nfunction Text(props: {\n    value: string | number | readonly string[]\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void\n    autoFocus?: boolean\n    placeholder?: string\n    maxLenght?: number\n    required?: boolean\n}) {\n    const textStyle = {\n        border: '0',\n        outline: '0',\n        cursor:'pointer',\n        width:'100%',\n        fontSize: '2rem',\n        padding: '2rem 0',\n        textAlign: 'center' as const,\n        borderRadius: '0.5rem',\n        marginTop:'1rem',\n    }\nreturn(\n    <input\n        type='text'\n        value={props.value}\n        className='i-text'\n        style={textStyle}\n        onChange={props.onChange}\n        required={true}\n        autoFocus={props.autoFocus}\n        placeholder={props.placeholder}\n        maxLength={props.maxLenght}\n        >\n    </input>\n    )\n}\nexport default Text","import React from 'react'\n\nfunction View(props: { children: React.ReactNode }) {\n    const sectionStyle = {\n        display: 'flex',\n        height: '100vh',\n        textAlign: 'center' as const,\n        flexDirection: 'column' as const,\n        justifyContent: 'center',\n    }\n    return (\n        <section\n            className='section'\n            style={sectionStyle}\n            >\n            {props.children}\n        </section>\n    )\n}\nexport default View","import React from 'react'\n\nexport function List(props: {\n\tlist: { value: number, text: string }[]\n\tlimit: number\n}) {\n\tconst listStyle = {\n\t\tpaddingLeft: '0',\n\t\tmargin:'1rem 0 0 0',\n\t\tcounterReset: 'counter',\n\t\tlistStylePosition: 'inside' as const,\n\t\tuserSelect: 'none' as const,\n\t}\n\treturn (\n\t\t<ul \n\t\t\tstyle={listStyle}\n\t\t\tclassName='stripe-count'>\n\t\t\t{props.list.slice(0, props.limit).map((item, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t<div>{item.text}</div>\n\t\t\t\t\t\t<div>{item.value}</div>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})}\n\t\t</ul>\n\t)\n}\nexport default List","import React, { useState, useEffect, SyntheticEvent } from 'react'\nimport {Sort,RColor,RNumber,MinMax} from '../services/Utils'\nimport Button from '../components/Button'\nimport Text from '../components/Text'\nimport View from '../components/View'\nimport List from '../components/List'\nimport './../App.scss'\n\nfunction App() {\n\tconst [player, setplayer] = useState<string>('')\n\tconst [steps, setSteps] = useState<number[]>([2, 16])\n\tconst [currentStep, setcurrentStep] = useState<number>(0)\n\tconst [isGameOver, setisGameOver] = useState<boolean>(false)\n\tconst [isHallOfFame, setisHallOfFame] = useState<boolean>(false)\n\tconst [rankingList, setrankingList] = useState<{ value: number, text: string }[]>([])\n\n\tuseEffect(() => {\n\t\tsetSteps(steps => MinMax(steps))\n\t}, [])\n\n\tconst handleTileClick = (e: SyntheticEvent<HTMLDivElement>) => {\n\t\tconst eTarget = e.target as Element\n\t\tif (eTarget.classList.contains('selected')) {\n\t\t\tif (steps.length === currentStep + 1) {\n\t\t\t\tsetcurrentStep(currentStep + 1)\n\t\t\t\tsetisGameOver(true)\n\t\t\t} else {\n\t\t\t\tsetcurrentStep(currentStep + 1)\n\t\t\t}\n\t\t} else {\n\t\t\tsetisGameOver(true)\n\t\t}\n\t}\n\tconst handleTiles = (step: number) => {\n\t\tconst squaresArr = []\n\t\tconst color = RColor()\n\t\tconst board = step * step\n\t\tconst randomNumber = RNumber(board)\n\t\tfor (let i = 0; i < board; i++) {\n\t\t\tsquaresArr.push(\n\t\t\t\t<div\n\t\t\t\t\tclassName={'tile' + (i === randomNumber ? ' selected' : '')}\n\t\t\t\t\tstyle={{ background: color }}\n\t\t\t\t\tonClick={(e) => handleTileClick(e)}\n\t\t\t\t\tkey={i}\n\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn squaresArr\n\t}\n\tconst goToHallOfFame = (e: { preventDefault: () => void }) => {\n\t\te.preventDefault()\n\t\tsetisHallOfFame(true)\n\t\trankingList.push({ 'value': currentStep, 'text': player })\n\t\tSort(rankingList)\n\t\tsetrankingList([...rankingList])\n\t}\n\tconst playAgain = () => {\n\t\tsetplayer('')\n\t\tsetcurrentStep(0)\n\t\tsetisGameOver(false)\n\t\tsetisHallOfFame(false)\n\t}\n/* \tconst winCheat = () => {setcurrentStep(steps.length);setisGameOver(true)} */\n\treturn (\n\t\t<>\n\t\t<div className='container section-first'>\n\t\t\t<View>\n\t\t\t\t<img className='circle self-center' src='ghavatar.png' alt='Bruno Galati Software Developer'/>\n\t\t\t\t<h1 className='lg'>Hi, I'm Bruno.</h1>\n\t\t\t\t<p className='text'>I'm specialized</p>\n\t\t\t\t<p className='text'>in software development</p>\n\t\t\t\t\n\t\t\t</View>\n\t\t{!isGameOver ?\n\t\t\t<View>\n\t\t\t\t<h1 className='over-square'>{currentStep}</h1>\n\t\t\t\t<div className={`board size-${steps[currentStep]}`}>\n\t\t\t\t\t{handleTiles(steps[currentStep])}\n\t\t\t\t</div>\n{/* \t\t\t\t<Button onClick={() => winCheat()}>Win the game</Button> */}\n\t\t\t</View> :\n\t\t\t<>\n\t\t\t{!isHallOfFame ?\n\t\t\t\t<View>\n\t\t\t\t\t<h1>{currentStep === steps.length ? `Winner! 👑` : `Game Over! 💀`}</h1>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\tmaxLenght={15}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\tvalue={player}\n\t\t\t\t\t\t\tplaceholder='Insert your name'\n\t\t\t\t\t\t\tonChange={e => setplayer(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{player ? <Button onClick={(e) => goToHallOfFame(e)}>Next</Button> : null}\n\t\t\t\t\t</form>\n\t\t\t\t</View> :\n\t\t\t\t<View>\n\t\t\t\t\t<h1>Hall of fame 🏆</h1>\n\t\t\t\t\t<List list={rankingList} limit={10} />\n\t\t\t\t\t<Button onClick={() => playAgain()} autoFocus={true}>Try again</Button>\n\t\t\t\t</View>\n\t\t\t}\n\t\t\t</>\n\t\t}\n\t\t</div>\n\t\t<div className='container section-block'>\n\t\t\t<img className='circle bg self-center' src='liavatar.png' alt='Bruno Galati Software Developer'/>\n\t\t\t<h1 className='lg'>About me</h1>\n\t\t\t<p className='text'>I'm a formed digital designer</p>\n\t\t\t<p className='text'>Building software and interfaces since 2008 and working in different countries</p>\n\t\t \t<div className='icons'>\n\t\t\t\t <span>🇧🇷</span>\n\t\t\t\t <span>🇮🇹</span>\n\t\t\t\t <span>🇩🇪</span> \n\t\t\t</div>\n\t\t</div>\n\t\t<div className='container section-block-middle'>\n\t\t\t<h1 className='lg'>Services</h1>\n\t\t\t<em className='text'>Apps and Websites made to caught attention</em>\n\t\t\t<em className='text'>scalable and maintainable code</em>\n\t\t\t<em className='text'>Keep it simple</em>\n\t\t\t<div className='icons'>\n\t\t\t\t<i className='icon-javascript' title='javascript'></i>\n\t\t\t\t<i className='icon-react' title='React'></i>\n\t\t\t\t<i className='icon-angular' title='Angular'></i>\n\t\t\t\t<i className='icon-vue-dot-js' title='Vue'></i>\n\t\t\t\t<i className='icon-php' title='PHP'></i>\n\t\t\t\t<i className='icon-html-five' title='HTML5'></i>\n\t\t\t\t<i className='icon-css3' title='CSS3'></i>\n\t\t\t</div>\n\t\t</div>\n\t\t<div className='container section-block-deep'>\n\t\t\t<h1 className='lg'>Contact</h1>\n\t\t\t<p className='text'>Drop me a line, let's chat</p>\n\t\t\t<div className='icons'>\n\t\t\t\t<a href='https://www.linkedin.com/in/brunogalatideveloper/' target='_blank' rel=\"noreferrer\"><i className='icon-linkedin2'></i></a>\n\t\t\t\t<a href='https://github.com/brunobruno' target='_blank' rel=\"noreferrer\"><i className='icon-github'></i></a>\n\t\t\t\t<a href='mailto:brngalati@gmail.com'><i className='icon-mail4'></i></a>\n\t\t\t\t<a href=\"tel:+393892849607\"><i className='icon-whatsapp'></i></a>\n\t\t\t</div>\n\t\t</div>\n\t\t</>\n\t)\n}\nexport default App\n","const MinMax = (array: number[]) => {\n\tlet arr = []\n\tfor (let i = array[0]; i <= array[1]; i++) {\n\t\tarr.push(i)\n\t}\n\treturn arr\n}\n\nconst RColor = () => {\n    return ('#'+(Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0'))\n}\n\nconst RNumber = (maxNumber: number) => {\n    return (Math.floor(Math.random() * maxNumber))\n}\n\nconst Sort = (array:{ value: number, text: string }[]) => {\n    return (\n        array.sort((n1,n2) => {\n            if (n1.value < n2.value) {\n                return 1\n            }\n            if (n1.value > n2.value) {\n                return -1\n            }\n            return 0\n        })\n    )\n}\n\nexport {MinMax,RColor,RNumber,Sort}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\nreportWebVitals();\n"],"sourceRoot":""}